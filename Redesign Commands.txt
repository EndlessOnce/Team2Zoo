Create Table Exhibit(
Exhibit_ID tinyint NOT NULL PRIMARY KEY AUTO_INCREMENT,
Exhibit_Status varchar(6) NOT NULL,
CONSTRAINT Status_Constraint CHECK(Exhibit_Status IN ("Open", "Closed"))
);

CREATE TABLE Animal(
Animal_ID smallint NOT NULL PRIMARY KEY AUTO_INCREMENT,
Name varchar(20) NOT NULL,
Gender varchar(6) NOT NULL,
Species varchar(50),
Health tinyint,
Diet varchar(40) NOT NULL,
Exhibit_ID tinyint,
FOREIGN KEY (Exhibit_ID) REFERENCES Exhibit (Exhibit_ID)
ON UPDATE CASCADE,
CONSTRAINT Gender_Constraint CHECK(Gender IN ("Male", "Female")),
CONSTRAINT Diet_Constraint CHECK(Diet IN ("Herbivore", "Omnivore", "Carnivore"))
);


//Make description longer?
CREATE TABLE Shows(
Show_ID smallint NOT NULL PRIMARY KEY AUTO_INCREMENT,
Date_Time datetime,
Description varchar(50),
Location varchar(20)
);

CREATE TABLE Shop(
Shop_ID tinyint NOT NULL PRIMARY KEY AUTO_INCREMENT,
Shop_Name varchar(20),
Shop_Type varchar(10),
Shop_Status varchar(6) NOT NULL,
CONSTRAINT Shop_Type_Constraint CHECK(Shop_Type IN ("Admissions", "Dining", "Gift Shop")),
CONSTRAINT Shop_Status_Constraint CHECK(Shop_Status IN ("Open", "Close"))
);


CREATE TABLE Employee(
Employee_ID tinyint NOT NULL AUTO_INCREMENT PRIMARY KEY,
Name varchar(50) NOT NULL,
Job_Description varchar(45),
Exhibit_ID tinyint,
Show_ID smallint,
Shop_ID tinyint,
FOREIGN KEY (Exhibit_ID) REFERENCES Exhibit (Exhibit_ID),
FOREIGN KEY (Show_ID) REFERENCES Shows (Show_ID),
FOREIGN KEY (Shop_ID) REFERENCES Shop (Shop_ID)
);


CREATE TABLE Visitor(
Visitor_ID int NOT NULL PRIMARY KEY AUTO_INCREMENT,
Ticket_Type varchar(6) NOT NULL,
Is_Member tinyint NOT NULL,
CONSTRAINT Ticket_Type_Constraint CHECK(Ticket_Type IN ("Child","Adult","Senior")),
Group_ID int,
Name varchar(50) NOT NULL,
Date_Time datetime NOT NULL,
Phone_Number varchar(15) NOT NULL
);

CREATE TABLE Member(
Membership_ID int NOT NULL PRIMARY KEY AUTO_INCREMENT,
Phone_Number varchar(15) NOT NULL,
Join_Date datetime NOT NULL,
Expiration_Date datetime NOT NULL,
Address varchar(60) NOT NULL
);


CREATE TABLE Transactions(
Transaction_ID int NOT NULL PRIMARY KEY AUTO_INCREMENT,
Visitor_ID int NOT NULL,
Date_Time datetime NOT NULL,
Shop_ID tinyint NOT NULL,
FOREIGN KEY (Shop_ID) REFERENCES Shop(Shop_ID),
FOREIGN KEY (Visitor_ID) REFERENCES Visitor(Visitor_ID)
);

CREATE TABLE Product(
Product_ID int NOT NULL AUTO_INCREMENT PRIMARY KEY,
Name varchar(30) NOT NULL,
Price double(8,2),
Available_Qty smallint
);

CREATE TABLE Products_Of_Transaction(
Transaction_ID int NOT NULL,
Product_ID int NOT NULL,
PRIMARY KEY (Transaction_ID, Product_ID),
FOREIGN KEY (Transaction_ID) REFERENCES Transactions (Transaction_ID)
ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (Product_ID) REFERENCES Product (Product_ID)
ON DELETE CASCADE ON UPDATE CASCADE
);

--------------------------------------------------------
DATA:
INSERT INTO EXHIBIT VALUES
(1, "Open");
Since auto_increment does the work for us,
simply do this instead:
INSERT INTO EXHIBIT(EXHIBIT_STATUS) VALUES
("CLOSED");

YOU MAY NEED TO RESET THE AUTO_INCREMENT THOUGH. DELETE ALL
ROWS AND RUN ALTER TABLE EXHIBIT AUTO_INCREMENT = 1;

EXHIBIT DATA:
insert into exhibit(exhibit_status) values
("Open"),("Open"),("Open"),("Closed");

ANIMAL DATA:
insert into animal(Name,Gender,Species,Health,Diet,Exhibit_ID,Common_Name) Values
("Sophie","Female", "Loxodonta africana", "1", "Herbivore", 1, "African Elephant"),
("Kaia", "Female", "Loxodonta africana", 0, "Herbivore", 1, "African Elephant"),
("Zuli", "Male", "Loxodonta africana", "1", "Herbivore", 2, "African Elephant");

insert into animal(Name,Gender,Species,Health,Diet,Exhibit_ID,Common_Name) Values
("Joanne", "Female", "Pongo pygmaeus", 1, "Herbivore", 3, "Orangutan"),
("Marley", "Female", "Symphalangus syndactylus", 1, "Omnivore", 3, "Siamang");

insert into animal(Name,Gender,Species,Health,Diet,Exhibit_ID,Common_Name) Values
("Tala", "Female", "Spheniscus demersus", "1", "Carnivore", 5, "African Penguin"),
("Moe", "Male", "Spheniscus demersus", "1", "Carnivore", 5, "African Penguin"),
("Fran", "Female", "Spheniscus demersus", "0", "Carnivore", 5, "African Penguin"),
("Jose", "Male", "Spheniscus demersus", "0", "Carnivore", 5, "African Penguin"),
("Cannon", "Female", "Spheniscus demersus", "1", "Carnivore", 5, "African Penguin"),
("Molly", "Female", "Spheniscus demersus", "1", "Carnivore", 5, "African Penguin");

insert into shows(Date_Time, Description, Location) values
("2020-09-02 13:00:00", "Exploring the abilities of Nocturnal Animals!", "Lorenz Plaza");


Shops Data:
insert into Shop(Shop_Name, Shop_Type, Shop_Status) values
("Sabertooth Grill", "Dining","Open"),
("Jungle Java", "Dining", "Open"),
("Panda Shop", "Gift Shop", "Open"),
("Parrot Palace", "Gift Shop", "Closed"),
("Ticket Booth A", "Admissions", "Open"),
("Ticket Booth B", "Admissions", "Open"),
("Ticket Booth C", "Admissions", "Closed");


Employee data:
insert into employee(Name,Job_Description, Exhibit_ID) values
("David Near","Feeder/Cleaner",1),
("Don Dresden", "Feeder/Cleaner",1),
("Steve Burton","Feeder",2),3),
("Jim Mets", "Feeder/Cleaner", 2),
("Diane Brown", "Feeder/Cleaner", 
("Dustin Kamal", "Cleaner", 3),
("Jessica Gonzalez","Feeder",5),
("Ali Baton", "Cleaner",5);


insert into employee(Name,Job_Description,Show_ID) values
("Jasmine Harper","Presenting Nocturnal Animals", "1");

insert into employee(Name,Job_Description, Shop_ID) values
("Hal Smith", "Cashier", 15),
("Alison Baker", "Server", 15),
("Ade Burkshire", "Server", 15),
("Philip Jane", "Cook", 15),
("Thomas Anvar", "Cook", 15);

insert into employee(Name,Job_Description, Shop_ID) values
("Andy Mao", "Cashier", 16),
("Lauren Doyle", "Cook", 16);

insert into employee(Name,Job_Description, Shop_ID) values
("Hugh Adams", "Cashier", 16),
("Daniel Mann", "Stocker", 16);

insert into employee(Name,Job_Description, Shop_ID) values
("Sarah Neighbors", "Cashier", 19),
("Gwen Woods", "Cashier", 20);

Visitor Data:
insert into Visitor (ticket_type, is_member, group_id, name, date_time, phone_number) values
("Adult", 0, 1, "Larry Folgers", "2020-03-22 9:15:00", "6194128854"),
("Adult", 1, 2, "Kyle Hopper", "2020-03-22 10:12:23", "6197448533"),
("Child", 0, 2, "Alan Hopper", "2020-03-22 10:12:23", "6197495446"),
("Senior", 0, 3, "Sherman Gilis","2020-03-23 12:47:13", "6185523201");


Member Data:
insert into Member(Phone_Number, Join_Date, Expiration_Date, Address) values
("6197448533", "2020-01-17 5:22:47", "2021-01-17 0:00:00", "437 North Hillshire Rd. San Diego, California 92101");

Product Data:
insert into Product(Name, Price, Available_Qty) values
("Burger Plate", 15.00, 266),
("Teriyaki Kebabs", 13.00, 289),
("Coffee", 6.50, 422),
("Pumpking Bread", 7.10, 202),
("Stuffed Animal-Whale", 21.00, 113),
("Bumper Sticker", 8.00, 89),
("Drinking Glass", 10.00,133);

Transaction Data:
insert into Transactions(Visitor_ID, Date_Time, Shop_ID) values
(1, "2020-03-22 9:15:00", 19),
(2, "2020-03-22 10:12:23", 20),
(1, "2020-03-22 12:32:21", 15),
(2, "2020-03-22 1:02:02", 15),
(2, "2020-03-22 2:15:13", 16),
(3, "2020-03-22 2:33:55", 17),
(4, "2020-03-23 12:47:13", 19),
(4, "2020-03-23 1:07:02", 16),
(4, "2020-03-23 3:15:54", 17);



QUERIES

Count all transactions of a customer:
Select count(*)
From Transactions
Where visitor_ID = <Either 1,2,3,4>

Count all transactions of a customer at a specific shop:
Select count(*)
From transactions
Where visitor_ID = <Either 1,2,3,4> and shop_ID = <either 15,16,17,19,20>

Count all transactions of a customer during a certain time period:
Select count(*)
From transactions
Where Date_Time < "2020-03-23 00:00:00";

